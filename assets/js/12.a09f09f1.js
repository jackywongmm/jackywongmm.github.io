(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{366:function(e,a,s){"use strict";s.r(a);var t=s(44),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"结构文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构文件"}},[e._v("#")]),e._v(" 结构文件")]),e._v(" "),s("h2",{attrs:{id:"整体结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整体结构"}},[e._v("#")]),e._v(" 整体结构")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("src\n├── compiler        # 编译相关 \n├── core            # 核心代码 \n├── platforms       # 不同平台的支持\n├── server          # 服务端渲染\n├── sfc             # .vue 文件解析\n├── shared          # 共享代码\n\n")])])]),s("h3",{attrs:{id:"compiler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compiler"}},[e._v("#")]),e._v(" compiler")]),e._v(" "),s("p",[e._v("compiler 目录包含 Vue.js 所有编译相关的代码。它包括把模板解析成 ast 语法树，ast 语法树优化，代码生成等功能。")]),e._v(" "),s("h3",{attrs:{id:"core"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#core"}},[e._v("#")]),e._v(" core")]),e._v(" "),s("p",[e._v("core 目录包含了 Vue.js 的核心代码，包括内置组件、全局 API 封装，Vue 实例化、观察者、虚拟 DOM、工具函数等等。")]),e._v(" "),s("p",[e._v("这里的代码是 Vue.js 的核心代码，也是通常提到的双向绑定的实现原理。")]),e._v(" "),s("h3",{attrs:{id:"platform"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#platform"}},[e._v("#")]),e._v(" platform")]),e._v(" "),s("p",[e._v("Vue.js 是一个跨平台的 MVVM 框架，它可以跑在 web 上，也可以配合 weex 跑在 native 客户端上。platform 是 Vue.js 的入口，2 个目录代表 2 个主要入口，分别打包成运行在 web 上和 weex 上的 Vue.js。web即我们前端开发使用的版本,weex为和阿里合作开发的一个跨平台版本，因为运行环境的改变主要是对编译和runtime的更改。")]),e._v(" "),s("h3",{attrs:{id:"server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#server"}},[e._v("#")]),e._v(" server")]),e._v(" "),s("p",[e._v("Vue.js 2.0 支持了服务端渲染，所有服务端渲染相关的逻辑都在这个目录下。即跑在node上的vue，由服务器直接生成到浏览器渲染，但是部分标记节点保持动态渲染的特性，可以直接使用vue生态的nuxt.js直接使用。")]),e._v(" "),s("h3",{attrs:{id:"shared"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shared"}},[e._v("#")]),e._v(" shared")]),e._v(" "),s("p",[e._v("Vue.js 会定义一些工具方法，这里定义的工具方法都是会被浏览器端的 Vue.js 和服务端的 Vue.js 所共享的。")]),e._v(" "),s("h2",{attrs:{id:"核心结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心结构"}},[e._v("#")]),e._v(" 核心结构")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("core\n├── components        # 组件相关 \n├── global-api        # 全局api\n├── instance          # vue实例核心\n├── observer          # 数据监听、依赖管理（双向绑定相关）\n├── util              # 开发工具函数\n├── vdom              # vdom\n\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);